// 左对齐
/*.swh-example {
   主轴方向
  // row:水平,左
  // row-reverse:水平，右
  // column:垂直,上
  // column-reverse:垂直，下
  flex-direction: row;
  // 主轴对齐方式
  // flex-start:左对齐
  // flex-end:右对齐
  // center:居中
  // space-between:两端对齐，间隔相等
  // space-around:每个项目两侧的间隔相等:
  justify-content: flex-start;
  // 交叉轴对齐方式
  // 交叉轴对齐方式
  // flex-start:交叉轴的起点对齐。
  // flex-end:交叉轴的终点对齐
  // center: 交叉轴的中点对齐
  // baseline:项目的第一行文字的基线对齐
  // stretch:如果项目未设置高度或设为auto，将占满整个容器的高度
  align-items: stretch;
  // 多根轴线的对齐方式 如果项目只有一根轴线，该属性不起作用
  // flex-start：与交叉轴的起点对齐
  // flex-end：与交叉轴的终点对齐
  // center：与交叉轴的中点对齐
  // space-between：与交叉轴两端对齐，轴线之间的间隔平均分布
  // space-around：每根轴线两侧的间隔都相等。所以，轴线之间的间隔比轴线与边框的间隔大一倍
  // stretch（默认值）：轴线占满整个交叉轴
  align-content: stretch;
  // 换行方式
  // nowrap:不换行
  // wrap:换行，第一行在上方
  // wrap-reverse:换行，第一行在下方
  flex-wrap: nowrap;
}*/


// 水平左对齐
.flex-row-left {
  display: flex;
  flex-direction: row;
  justify-content: flex-start;
  align-items: center;
}

// 水平右对齐
.flex-row-right {
  display: flex;
  flex-direction: row;
  justify-content: flex-end;
  align-items: center;
}

// 水平居中
.flex-row-center {
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
}

// 水平两端对齐
.flex-row-justify {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
}


// 垂直顶部对齐
.flex-col-top {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: center;
}

// 垂直顶部对齐
//.flex-col-left {
//  display: flex;
//  flex-direction: column;
//  justify-content: flex-start;
//  align-items: flex-end;
//}

// 垂直底部
.flex-col-bottom {
  display: flex;
  flex-direction: column;
  justify-content: flex-end;
  align-items: center;
}

// 垂直居中
.flex-col-center {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

// 垂直两端对齐
.flex-col-justify {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: center;
}

/***********************华丽的分割线*************************/
.flex-r {
  display: flex;
  flex-direction: row;
}

.r-start {
  justify-content: flex-start;
}

.c-start {
  align-items: flex-start;
}

.flex-test2 {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: flex-start;
}

@mixin flex-common {
  &.start {
    justify-content: flex-start;
  }

  &.end {
    justify-content: flex-end;
  }

  &.center {
    justify-content: center;
  }

  &.between {
    justify-content: space-between;
  }

  &.around {
    justify-content: space-around;
  }

  &.align-start {
    align-items: flex-start;
  }

  &.align-end {
    align-items: flex-end;
  }

  &.align-center {
    align-items: center;
  }

  &.align-baseline {
    align-items: baseline;
  }

  &.align-stretch {
    align-items: stretch;
  }
}


.flex-row {
  display: flex;
  display: -webkit-flex;
  flex-direction: row;

  @include flex-common();
}

.flex-col {
  display: flex;
  display: -webkit-flex;
  flex-direction: column;

  @include flex-common();
}


.flex-row-re {
  display: flex;
  display: -webkit-flex;
  flex-direction: row-reverse;

  @include flex-common();
}

.flex-col-re {
  display: flex;
  display: -webkit-flex;
  flex-direction: column-reverse;

  @include flex-common();
}

//
//.flex {
//  display: flex;
//  align-items: center;
//}
//
//.row-start {
//  flex-direction: row;
//  justify-content: flex-start;
//}
//
//.row-center {
//  flex-direction: row;
//  justify-content: center;
//}
//
//.row-end {
//  flex-direction: row;
//  justify-content: flex-end;
//}
//
//.row-between {
//  flex-direction: row;
//  justify-content: space-between;
//}
//
//.row-start-start {
//  flex-direction: row;
//  justify-content: flex-start;
//  align-items: flex-start;
//}
//
//.row-start-end {
//  flex-direction: row;
//  justify-content: flex-start;
//  align-items: flex-end;
//}
//
//.row-end-start {
//  flex-direction: row;
//  justify-content: flex-end;
//  align-items: flex-start;
//}
//
//.row-end-end {
//  flex-direction: row;
//  justify-content: flex-end;
//  align-items: flex-end;
//}
//
//
//.row-start-reverse {
//  flex-direction: row-reverse;
//  justify-content: flex-start;
//}
//
//.row-center-reverse {
//  flex-direction: row-reverse;
//  justify-content: center;
//}
//
//.row-end-reverse {
//  flex-direction: row-reverse;
//  justify-content: flex-end;
//}
//
//.row-between-reverse {
//  flex-direction: row-reverse;
//  justify-content: space-between;
//}
//
//
//.col-top {
//  flex-direction: column;
//  justify-content: flex-start;
//}
//
//.col-center {
//  flex-direction: column;
//  justify-content: center;
//}
//
//.col-bottom {
//  flex-direction: column;
//  justify-content: flex-end;
//}
//
//.col-between {
//  flex-direction: column;
//  justify-content: space-between;
//}
//
//.col-top-reverse {
//  flex-direction: column-reverse;
//  justify-content: flex-start;
//}
//
//.col-center-reverse {
//  flex-direction: column-reverse;
//  justify-content: center;
//}
//
//.col-bottom-reverse {
//  flex-direction: column-reverse;
//  justify-content: flex-end;
//}
//
//.col-between-reverse {
//  flex-direction: column-reverse;
//  justify-content: space-between;
//}
//
//.flex-wrap {
//  flex-wrap: wrap
//}

// 两端对齐
.justify-between {
  //justify-content: space-between;
}


/*

横向布局 起点在左端常用布局伪类,命名规则
s : flex-start
e : flex-end
c : center

规则1
.flex-rsc 左
.flex-rcc 中
.flex-rec 右
.flex-rbc 两端

.flex-rss 左上
.flex-rse 左下
.flex-res 右上
.flex-ree 右下

反向后面根-re
.flex-ree-re 右下反向排列


规则2
.flex-r-sc 左
.flex-r-cc 中
.flex-r-ec 右
.flex-r-bc 两端

.flex-r-ss 左上
.flex-r-se 左下
.flex-r-es 右上
.flex-r-ee 右下

规则3 三个类一起使用
flex-r r-start r-center 左
flex-r r-center r-center 中
flex-r r-end r-center 中
flex-r r-between r-center 两端
*/









